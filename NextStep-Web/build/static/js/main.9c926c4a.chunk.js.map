{"version":3,"sources":["components/elements/SelectionCard.js","config/index.js","components/ControllerInfo.js","components/elements/Loader.js","components/elements/InfoCard.js","components/Attendance.js","components/BasicStats.js","components/elements/RenderScoreMeters.js","components/Subjects.js","components/elements/RenderPieChart.js","components/UserDistribution.js","components/elements/RenderBarChart.js","components/SemesterGradeDistribution.js","components/elements/RenderTable.js","components/TopStudents.js","components/AttendanceDistributions.js","components/elements/RenderLineChart.js","components/AttendanceTimeline.js","components/SubmissionTypes.js","components/SubmissionTimeline.js","components/AssignmentByTitle.js","components/elements/Modal.js","views/StudentView.js","components/GradesByTeacher.js","views/TeacherView.js","App.js","reportWebVitals.js","index.js"],"names":["SelectionCard","props","header","selectionOptions","selChanged","className","onChange","e","target","value","map","option","i","API_URL","process","CUBE_JS_TOKEN","LoadSemesters","cb","a","query","fetch","method","headers","Authorization","body","JSON","stringify","res","json","data","item","LoadSections","semester","LoadClassNames","ControllerInfo","setSemester","setState","currSemester","_","loadClasses","loadSections","setSemesterCb","setClass","state","setClassCb","setSection","section","setSectionCb","loadSemesters","semesters","classNames","sections","currClassName","this","React","PureComponent","Loader","InfoCard","infoText","spanClass","loading","rest","RenderAttendanceInfo","attendance","present","total","LoadAttendanceInfo","categoryType","filters","push","LoadGradeAverage","BasicStats","Load","filter","studentCount","toString","presentCount","toFixed","totalCount","length","FormatAttendanceInfo","attendanceInfo","gradeAverage","FormatGradeAverage","stat","Component","colors","RenderScoreMeters","scores","title","index","style","height","width","x","y","dy","textAnchor","fontSize","fontWeight","fill","name","cx","cy","innerRadius","outerRadius","startAngle","endAngle","LoadData","console","log","message","SemesterSubjectScores","parseFloat","FormatData","subjectScores","handleClick","showModal","meterWidth","onClick","RenderPieChart","nameKey","dataKey","isAnimationActive","dimensions","UserClassDistribution","RenderBarChart","margin","top","right","left","bottom","strokeDasharray","SemesterGradeDistribution","loadData","err","RenderTable","table","rows","tableProps","row","col","j","TopAttendees","unshift","columns","FormatAsTable","AttendanceDistributions","RenderLineChart","timelineData","categories","customTooltip","content","cat","type","stroke","CustomTooltip","active","payload","label","color","AttendanceTimeline","timeline","day","Date","toDateString","category","dailyData","indexDates","forEach","includes","AssignmentSubmissionStatistics","cleanedData","mime","indexOf","slice","toUpperCase","GetGenericFileType","Object","keys","key","submissionStats","AssignmentSubmissionTimeline","chart","AssignmentSubmissionCountByTitle","FormatDataAsTable","RenderModal","modalTitle","ModalComponent","modalProps","HideModal","overflow","StudentView","setStateKey","classSelected","sectionSelected","semesterSelected","modalComponent","hideModal","Subjects","UserDistribution","TopStudents","SubmissionTypes","SubmissionTimeline","AssignmentByTitle","GradesByTeacher","TeacherView","App","viewSelector","view","viewSelected","views","clickHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c926c4a.chunk.js","sourcesContent":["import React from 'react';\n\nconst SelectionCard = (props) => {\n    const { header, selectionOptions } = props;\n    const selChanged = props.selChanged;\n\n    return (\n        <div className=\"card x-small\">\n            <div className=\"card-header\">\n                <div className=\"three-fourth container-v-center\">\n                    <span className=\"padding\">{header}</span>\n                </div>\n            </div>\n\n            <div className=\"card-body\">\n                <form>\n                    <select onChange={\n                        e => {\n                            selChanged(e.target.value);\n                        }\n                    }>\n                        <option value=\"\"></option>\n                        {\n                            selectionOptions.map((option, i) => {\n                                return (\n                                    <option value={option} key={`option#${i}`} >\n                                        {option}\n                                    </option>\n                                )\n                            })\n                        }\n                    </select>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default SelectionCard;","export const API_URL = process.env.REACT_APP_API_URL;\nexport const CUBE_JS_TOKEN = `Bearer ${process.env.REACT_APP_CUBE_JS_TOKEN}`;","import React from 'react';\nimport SelectionCard from './elements/SelectionCard';\nimport { API_URL, CUBE_JS_TOKEN } from '../config';\n\nconst LoadSemesters = async (cb) => {\n    const query = {\n        \"dimensions\": [\n            \"Semesters.semester\"\n        ],\n        \"timeDimensions\": [\n            {\n                \"dimension\": \"Semesters.startdate\",\n                \"granularity\": \"day\"\n            }\n        ],\n        \"order\": {\n            \"Semesters.startdate\": \"desc\"\n        }\n    };\n\n    let res = await fetch(API_URL + \"/cubejs-api/v1/load\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: CUBE_JS_TOKEN\n        },\n        body: JSON.stringify({ query })\n    })\n    res = await res.json();\n\n    if(!res  || !res.data){\n        cb([]);\n        return;\n    }\n\n    let data = res.data.map(item => {\n        return item['Semesters.semester'];\n    })\n    cb(data);\n}\n\nconst LoadSections = async (semester, className, cb) => {\n    if(!semester || !className){\n        cb([]);\n        return;\n    }\n    const query = {\n        \"dimensions\": [\n            \"Attendances.section\",\n            \"Sections.section\"\n        ],\n        \"timeDimensions\": [],\n        \"order\": {},\n        \"measures\": [],\n        \"filters\": [\n            {\n                \"dimension\": \"Semesters.semester\",\n                \"operator\": \"equals\",\n                \"values\": [\n                    `${semester}`\n                ]\n            },\n            {\n                \"dimension\": \"Grades.grade\",\n                \"operator\": \"equals\",\n                \"values\": [\n                    `${className}`\n                ]\n            }\n        ]\n    };\n\n    let res = await fetch(API_URL + \"/cubejs-api/v1/load\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: CUBE_JS_TOKEN\n        },\n        body: JSON.stringify({ query })\n    })\n    res = await res.json();\n\n    if(!res){\n        cb([]);\n        return;\n    }\n\n    let data = res.data.map(item => {\n        return item['Sections.section'];\n    })\n    cb(data);\n}\n\nconst LoadClassNames = async (semester, cb) => {\n    if(!semester){\n        cb([]);\n        return;\n    }\n    const query = {\n        \"measures\": [],\n        \"timeDimensions\": [],\n        \"order\": {},\n        \"dimensions\": [\n            \"Attendances.class\",\n            \"Grades.grade\"\n        ],\n        \"filters\": [\n            {\n                \"dimension\": \"Semesters.semester\",\n                \"operator\": \"equals\",\n                \"values\": [\n                    `${semester}`\n                ]\n            }\n        ]\n    };\n\n    let res = await fetch(API_URL + \"/cubejs-api/v1/load\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: CUBE_JS_TOKEN\n        },\n        body: JSON.stringify({ query })\n    })\n    res = await res.json();\n\n    if(!res || !res.data){\n        cb([]);\n        return;\n    }\n\n    let data = res.data.map(item => {\n        return item['Grades.grade'];\n    })\n    cb(data);\n}\n\nclass ControllerInfo extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            semesters: [],\n            classNames: [],\n            sections: [],\n            currSemester: '',\n            currClassName: '',\n        };\n\n        this.setSemesterCb = props.setSemester;\n        this.setClassCb = props.setClass;\n        this.setSectionCb = props.setSection;\n    }\n\n    componentDidMount(){\n        this.loadSemesters();\n    }\n\n    setSemester = (semester) => {\n        this.setState({\n            currSemester: semester,\n        }, _ => {\n            this.loadClasses(semester);\n            this.loadSections('');\n\n            this.setSemesterCb(semester);\n        })\n    }\n\n    setClass = (className) => {\n        const { currSemester } = this.state;\n        this.loadSections(currSemester, className);\n\n        this.setClassCb(className);\n    }\n\n    setSection = section => {\n        this.setSectionCb(section);\n    }\n\n\n    loadSemesters = () => {\n        LoadSemesters(data => {\n            this.setState({\n                semesters: data\n            })\n        })\n    }\n\n    loadClasses = (semester) => {\n        LoadClassNames(semester, data => {\n            this.setState({\n                classNames: data\n            });\n        });\n    }\n\n    loadSections = (semester, className) => {\n        LoadSections(semester, className, data => {\n            this.setState({\n                sections: data\n            })\n        })\n    }\n\n    render() {\n        let { semesters, classNames, sections } = this.state;\n\n        return (\n            <div className=\"focused\">\n                <div className=\" padding\">\n                    <SelectionCard header={'Select Semester'} selectionOptions={semesters} selChanged={this.setSemester} />\n                </div>\n                <div className=\" padding\">\n                    <SelectionCard header={'Select Class'} selectionOptions={classNames} selChanged={this.setClass} />\n                </div>\n                <div className=\" padding\">\n                    <SelectionCard header={'Select Section'} selectionOptions={sections} selChanged={this.setSection} />\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default ControllerInfo;","import React from 'react';\n\nconst Loader = (props) => {\n    return (\n        <div className=\"container-center\" {...props}>\n            <div className=\"loader\"></div>\n        </div>\n    )\n}\n\nexport default Loader;","import React from 'react';\nimport Loader from './Loader';\n\nconst InfoCard = (props) => {\n    let { header, infoText, spanClass, loading, ...rest } = props;\n    spanClass = props.spanClass || '';\n\n    return (\n        <div className=\"card x-small\" {...rest}>\n            <div className=\"card-header\">\n                <div className=\"three-fourth container-v-center\">\n                    <span className=\"padding\">{header}</span>\n                </div>\n            </div>\n\n            <div className=\"card-body align-right\">\n                {\n                    loading ? <Loader /> : <span className={spanClass}>{infoText}</span>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default InfoCard;","import React from 'react';\n\nconst RenderAttendanceInfo = (props) => {\n    const { attendance, present, total } = props;\n\n    return (\n        <div>\n            <div className=\"card x-small\">\n                <div className=\"card-header\">\n                    <div className=\"container-v-center\">\n                        <span className=\"padding\">Attendance</span>\n                    </div>\n                </div>\n\n                <div className=\"card-body flex-between bordered\">\n                    <span className={'text-big'}>{attendance}%</span>\n                    <span className=\"padding text-medium\"><b>{present} / {total}</b></span>\n                </div>\n\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default RenderAttendanceInfo;","import React from 'react';\nimport InfoCard from './elements/InfoCard';\nimport RenderAttendanceInfo from './Attendance';\nimport { API_URL, CUBE_JS_TOKEN } from '../config';\n\nconst LoadAttendanceInfo = async (categoryType, semester = '', className = '', section = '', cb) => {\n    let filters = [\n        {\n            \"dimension\": \"Users.categorytype\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${categoryType}`\n            ]\n        }\n    ];\n    if (semester) {\n        filters.push({\n            \"dimension\": \"Semesters.semester\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${semester}`\n            ]\n        });\n    }\n    if (className) {\n        filters.push({\n            \"dimension\": \"Grades.grade\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${className}`\n            ]\n        })\n    }\n    if (section) {\n        filters.push({\n            \"dimension\": \"Sections.section\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${section}`\n            ]\n        })\n    };\n    const query = {\n        \"dimensions\": [],\n        \"timeDimensions\": [],\n        \"order\": {},\n        \"measures\": [\n            \"Attendances.userCount\",\n            \"Attendances.attendance\",\n            \"Attendances.count\",\n            \"Attendances.present\"\n        ],\n        \"filters\": filters\n    };\n\n    let res = await fetch(API_URL + \"/cubejs-api/v1/load\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: CUBE_JS_TOKEN\n        },\n        body: JSON.stringify({ query })\n    })\n    res = await res.json();\n\n    cb(res.data);\n}\n\nconst FormatAttendanceInfo = data => {\n    if (!data)\n        return null;\n\n    data = data.filter(item => {\n        return item['Attendances.attendance'] ? true : false;\n    })\n    data = data.map(item => {\n        return {\n            studentCount: item['Attendances.userCount'].toString(),\n            presentCount: item['Attendances.present'].toString(),\n            attendance: item['Attendances.attendance'].toFixed(2),\n            totalCount: item['Attendances.count'].toString()\n        }\n    });\n\n    return data.length ? data[0] : null;\n}\n\nconst LoadGradeAverage = async (semester, cb) => {\n    let filters = [];\n    if (semester) {\n        filters.push(\n            {\n                \"dimension\": \"Semesters.semester\",\n                \"operator\": \"equals\",\n                \"values\": [\n                    `${semester}`\n                ]\n            }\n        )\n    }\n    const query = {\n        \"dimensions\": [],\n        \"timeDimensions\": [\n            {\n                \"dimension\": \"UsersGrade.gradeCreatedon\"\n            }\n        ],\n        \"order\": {},\n        \"measures\": [\n            \"UsersGrade.average\"\n        ],\n        \"filters\": filters\n    };\n\n    let res = await fetch(API_URL + \"/cubejs-api/v1/load\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: CUBE_JS_TOKEN\n        },\n        body: JSON.stringify({ query })\n    })\n    res = await res.json();\n\n    cb(res.data);\n}\n\nconst FormatGradeAverage = data => {\n    if (!data)\n        return { gradeAverage: 'NA' };\n    data = data.map(item => {\n        return {\n            gradeAverage: item['UsersGrade.average'].toFixed(2)\n        }\n    });\n\n    return data.length ? data[0] : null;\n}\n\nclass BasicStats extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            categoryType: props.categoryType,\n            attendanceInfo: {\n                studentCount: 'NA',\n                attendance: 'NA',\n                presentCount: 'NA',\n                totalCount: 'NA',\n            },\n            gradeAverage: 'NA'\n        };\n\n        this.Load(props.semester, props.className, props.section);\n    }\n\n    componentWillReceiveProps(props) {\n        this.Load(props.semester, props.className, props.section);\n    }\n\n    Load = (semester, className, section) => {\n        this.setState({\n            loading: true\n        })\n\n        LoadAttendanceInfo(this.state.categoryType, semester, className, section, data => {\n            data = FormatAttendanceInfo(data);\n            if (data)\n                this.setState({\n                    attendanceInfo: data\n                })\n            else {\n                this.setState({\n                    attendanceInfo: {\n                        studentCount: 'NA',\n                        attendance: 'NA',\n                        presentCount: 'NA',\n                        totalCount: 'NA',\n                    }\n                })\n            }\n\n            LoadGradeAverage(semester, data => {\n                data = FormatGradeAverage(data);\n                if (data)\n                    this.setState({\n                        gradeAverage: data.gradeAverage,\n                        loading: false\n                    })\n                else{\n                    this.setState({\n                        gradeAverage: 'NA',\n                        loading: false\n                    })\n                }\n            })\n        })\n    }\n\n    render() {\n        const { attendanceInfo: stat, loading, gradeAverage } = this.state;\n\n        return (\n            <div>\n                <div className=\"padding\">\n                    <InfoCard header={'User Count'} infoText={stat.studentCount} spanClass={'text-big padding'} loading={loading} />\n                </div>\n                <div className=\"padding\">\n                    <RenderAttendanceInfo attendance={stat.attendance} present={stat.presentCount} total={stat.totalCount} />\n                </div>\n                <div className=\"padding\">\n                    <InfoCard header={'Average Marks'} infoText={gradeAverage} spanClass={'text-big padding'} loading={loading} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default BasicStats;","import React from 'react';\nimport { Sector } from \"recharts\";\n\nconst colors = ['#FF6492', '#0095FF', '#141446', '#7A77FF'];\n\nconst RenderScoreMeters = props => {\n    const { scores, title } = props;\n\n    return (\n        <div className=\"container center\" >\n            {\n                scores.map((item, index) => {\n                    let value = (item.value / 100) * 280;\n                    value = 230 - value;\n\n                    return (\n                        <div className=\"container center bordered one-half\" \n                            key={`score-meter.div#${index}`}\n                            >\n                            <svg style={{ height: '280px', width: '200px' }} key={`svg#${index}`}>\n                                <g key={`g#${index}`}>\n                                    <text x={100} y={225} dy={8} textAnchor=\"middle\"\n                                        fontSize={14} fontWeight={'400'}\n                                        fill={'#444'}\n                                        key={`txt2#${index}`}\n                                    >\n                                        {item.name}\n                                    </text>\n\n                                    <text x={100} y={125} dy={8} textAnchor=\"middle\"\n                                        fill={colors[index % colors.length]} key={`txt1#${index}`}>\n                                        {title}\n                                    </text>\n                                    <text x={100} y={140} dy={8} textAnchor=\"middle\"\n                                        fill={colors[index % colors.length]} key={`txt3#${index}`}>\n                                        {item.value}\n                                    </text>\n\n                                    <Sector\n                                        cx={100}\n                                        cy={135}\n                                        innerRadius={50}\n                                        outerRadius={80}\n                                        startAngle={-50}\n                                        endAngle={230}\n                                        fill={'#DDD'}\n                                        key={`sector#${index}`}\n                                    />\n\n                                    <Sector\n                                        cx={100}\n                                        cy={135}\n                                        innerRadius={50}\n                                        outerRadius={80}\n                                        startAngle={value}\n                                        endAngle={230}\n                                        fill={colors[index % colors.length]}\n                                        key={`sector2#${index}`}\n                                    />\n                                    <Sector\n                                        cx={100}\n                                        cy={135}\n                                        innerRadius={84}\n                                        outerRadius={89}\n                                        startAngle={value}\n                                        endAngle={230}\n                                        fill={colors[index % colors.length]}\n                                        key={`sector3#${index}`}\n                                    />\n                                </g>\n                            </svg>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default RenderScoreMeters;","import React from 'react';\nimport RenderScoreMeters from './elements/RenderScoreMeters';\nimport Loader from './elements/Loader';\nimport { API_URL, CUBE_JS_TOKEN } from '../config';\n\nconst LoadData = async (semester = '', cb) => {\n    let filters = [];\n    if (semester) {\n        filters.push(\n            {\n                \"dimension\": \"Semesters.semester\",\n                \"operator\": \"equals\",\n                \"values\": [\n                    `${semester}`\n                ]\n            }\n        )\n    }\n    const query = {\n        \"measures\": [\n            \"UsersGrade.count\",\n            \"UsersGrade.average\"\n        ],\n        \"dimensions\": [\n            \"Subjects.subject\"\n        ],\n        \"timeDimensions\": [\n            {\n                \"dimension\": \"UsersGrade.gradeCreatedon\"\n            }\n        ],\n        \"order\": {\n            \"UsersGrade.count\": \"desc\"\n        },\n        \"filters\": filters\n    };\n\n    try {\n        let res = await fetch(API_URL + \"/cubejs-api/v1/load\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: CUBE_JS_TOKEN\n            },\n            body: JSON.stringify({ query })\n        })\n        res = await res.json();\n\n        cb(res.data);\n    }\n    catch (err) {\n        console.log('Fetch error: ', err.message);\n        cb([]);\n    }\n}\n\nconst FormatData = (data) => {\n    if(!data)\n        return [];\n\n    return data.map(item => {\n        return {\n            name: item['Subjects.subject'],\n            value: parseFloat(item['UsersGrade.average'].toFixed(2))\n        };\n    })\n}\nclass SemesterSubjectScores extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            subjectScores: [],\n        };\n\n        this.showModal = props.showModal;\n        this.Load(props.semester);\n    }\n\n    Load = (semester) => {\n        this.setState({\n            loading: true\n        });\n        LoadData(semester, data => {\n            data = FormatData(data);\n\n            this.setState({\n                loading: false,\n                subjectScores: data\n            })\n        })\n    }\n\n    componentWillReceiveProps(props) {\n        this.Load(props.semester);\n    }\n\n    handleClick = () => {\n        let { subjectScores, loading } = this.state;\n\n        if (!loading) {\n            this.showModal('Average Subject Scores',\n                RenderScoreMeters,\n                {\n                    scores: subjectScores,\n                    title: 'Average',\n                    meterWidth: '50%'\n                });\n        }\n\n        return true;\n    }\n\n    render() {\n        let { subjectScores, loading } = this.state;\n\n        return (\n            <div className=\"card medium\">\n                <div className=\"card-header\">\n                    <div className=\"two-third container-v-center\">\n                        <span className=\"padding\">Average Subject Score</span>\n                    </div>\n                    <div className=\"one-third container-v-center right\">\n                        <span onClick={e => this.handleClick()} className=\"open-modal-btn\">Expand</span>\n                    </div>\n                </div>\n\n                <div className=\"card-body\">\n                    {\n                        loading ?\n                            <Loader style={{ height: '280px' }} /> :\n                            <RenderScoreMeters scores={subjectScores} title=\"Average\" meterWidth=\"50%\" />\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SemesterSubjectScores;","import React from 'react';\nimport { ResponsiveContainer, PieChart, Pie, Legend, Tooltip, Cell} from 'recharts';\n\nconst colors = ['#FF6492', '#0095FF', '#141446', '#7A77FF'];\n\nconst RenderPieChart = (props) => {\n    const { data } = props;\n    const nameKey = props.nameKey || 'name';\n    const dataKey = props.dataKey || 'value';\n\n    return (\n        <div className=\"container center\">\n            <ResponsiveContainer width=\"100%\" height={258}>\n                <PieChart style={{ height: '240px', width: '100%' }}>\n                    <Pie\n                        isAnimationActive={false}\n                        data={data}\n                        nameKey={nameKey}\n                        outerRadius={80}\n                        innerRadius={40}\n                        dataKey={dataKey}\n                        fill=\"#8884d8\"\n                    >\n                        {\n                            data.map((e, index) =>\n                                <Cell key={index} fill={colors[index % colors.length]} />\n                            )\n                        }\n                    </Pie>\n                    <Legend />\n                    <Tooltip />\n                </PieChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nexport default RenderPieChart;","import React from 'react';\nimport RenderPieCharts from './elements/RenderPieChart';\nimport Loader from './elements/Loader';\n\nimport { API_URL, CUBE_JS_TOKEN } from '../config';\n\nconst LoadData = async (categoryType, semester = '', className = '', cb) => {\n    let filters = [\n        {\n            \"dimension\": \"Users.categorytype\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${categoryType}`\n            ]\n        }\n    ];\n    let dimensions = [];\n\n    if (!semester) {\n        dimensions.push('Semesters.semester');\n    }\n\n    if (semester) {\n        filters.push(\n            {\n                \"dimension\": \"Semesters.semester\",\n                \"operator\": \"equals\",\n                \"values\": [\n                    `${semester}`\n                ]\n            }\n        );\n\n        if (!className)\n            dimensions.push('Grades.grade');\n    }\n\n    if (className) {\n        filters.push(\n            {\n                \"dimension\": \"Grades.grade\",\n                \"operator\": \"equals\",\n                \"values\": [\n                    `${className}`\n                ]\n            }\n        );\n\n        dimensions.push('Sections.section');\n    }\n\n    const query = {\n        \"measures\": [\"Attendances.userCount\"],\n        \"timeDimensions\": [],\n        \"order\": {},\n        \"dimensions\": dimensions,\n        \"filters\": filters\n    };\n\n    try {\n        let res = await fetch(API_URL + \"/cubejs-api/v1/load\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: CUBE_JS_TOKEN\n            },\n            body: JSON.stringify({ query })\n        })\n        res = await res.json();\n\n        cb(res.data);\n    }\n    catch (err) {\n        console.log('Fetch error: ', err.message);\n        cb([]);\n    }\n}\n\nconst FormatData = data => {\n    if (!data)\n        return [];\n\n    data = data.map(item => {\n        return {\n            name: item['Semesters.semester'] || item['Grades.grade'] || item['Sections.section'],\n            value: item['Attendances.userCount']\n        }\n    })\n\n    // only keep items with NON Zero value\n    return data.filter(item => item.value !== 0)\n}\n\nclass UserClassDistribution extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            categoryType: props.categoryType,\n            loading: false,\n            data: [],\n        }\n\n        this.Load(props.semester, props.className);\n    }\n\n    componentWillReceiveProps(props) {\n        this.Load(props.semester, props.className);\n    }\n\n    Load = (semester, className) => {\n        this.setState({\n            loading: true\n        })\n        LoadData(this.state.categoryType, semester, className, data => {\n            data = FormatData(data);\n\n            this.setState({\n                loading: false,\n                data\n            })\n        })\n    }\n\n    render() {\n        const { loading, data } = this.state;\n\n        return (\n            <div>\n                {\n                    loading ? <Loader style={{ height: '280px' }} /> : <RenderPieCharts data={data} />\n                }\n            </div>\n        )\n    }\n}\n\nexport default UserClassDistribution;","import React from 'react';\nimport {\n    BarChart, CartesianGrid,\n    XAxis, YAxis, Legend,\n    Bar, Tooltip\n} from 'recharts';\n\nconst RenderBarChart = (props) => {\n    const { data } = props;\n    const title = props.title || 'Value';\n\n    return (\n        <div className=\"container center\">\n            <BarChart\n                width={420}\n                height={265}\n                data={data}\n                margin={{\n                    top: 10, right: 30, left: 0, bottom: 10,\n                }}\n\n                className=\"bordered padding\"\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"value\" name={title} fill=\"#0095FF\" />\n            </BarChart>\n        </div>\n    )\n}\n\nexport default RenderBarChart;","import React from 'react';\nimport RenderBarChart from './elements/RenderBarChart';\nimport Loader from './elements/Loader';\nimport { API_URL, CUBE_JS_TOKEN } from '../config';\n\nconst LoadData = async (semester = '', cb) => {\n    let filters = [];\n\n    if (semester) {\n        filters.push(\n            {\n                \"dimension\": \"Semesters.semester\",\n                \"operator\": \"equals\",\n                \"values\": [\n                    `${semester}`\n                ]\n            }\n        )\n    }\n    const query = {\n        \"measures\": [\n            \"UsersGrade.division1\",\n            \"UsersGrade.division2\",\n            \"UsersGrade.division3\",\n            \"UsersGrade.fail\"\n        ],\n        \"timeDimensions\": [\n            {\n                \"dimension\": \"UsersGrade.gradeCreatedon\"\n            }\n        ],\n        \"order\": {\n            \"UsersGrade.Division1\": \"desc\"\n        },\n        \"dimensions\": [],\n        \"filters\": filters\n    };\n\n    let res = await fetch(API_URL + \"/cubejs-api/v1/load\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: CUBE_JS_TOKEN\n        },\n        body: JSON.stringify({ query })\n    })\n    res = await res.json();\n\n    cb(res.data);\n}\n\nconst FormatData = data => {\n    if (!data || !data.length)\n        return [];\n\n    data = data[0];\n    return [\n        {\n            name: 'Div 1',\n            value: data['UsersGrade.division1'],\n        },\n        {\n            name: 'Div 2',\n            value: data['UsersGrade.division2']\n        },\n        {\n            name: 'Div 3',\n            value: data['UsersGrade.division3']\n        },\n        {\n            name: 'Fail',\n            value: data['UsersGrade.fail']\n        }\n    ];\n};\n\n\nclass SemesterGradeDistribution extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: [],\n            loading: true,\n        };\n\n        this.loadData(props.semester);\n    }\n\n    componentWillReceiveProps(props) {\n        this.loadData(props.semester);\n    }\n\n    loadData = async (semester) => {\n        try {\n            this.setState({\n                loading: true,\n            });\n            \n            LoadData(semester, data => {\n                data = FormatData(data);\n\n                this.setState({\n                    data,\n                    loading: false\n                })\n            })\n        }\n        catch (err) {\n            console.log('Fetch error: ', err.message);\n        }\n    }\n\n    render() {\n        const { data, loading } = this.state;\n\n        return (\n            <div>\n                {\n                    loading ?\n                        <Loader style={{ height: '255px' }} /> :\n                        <RenderBarChart data={data} title=\"Student Count\" />\n                }\n            </div>\n        );\n    }\n}\n\nexport default SemesterGradeDistribution;","import React from 'react';\n\nconst RenderTable = props => {\n    const { table: { rows, headers }, ...tableProps } = props;\n\n    return (\n        <div {...tableProps}>\n            <table >\n                <thead>\n                    <tr>\n                        {\n                            headers.map((item, i) => {\n                                return (\n                                    <td key={`th.td#${i}`}>{item}</td>\n                                )\n                            })\n                        }\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        rows.map((row, i) => {\n                            return (\n                                <tr key={`tr${i}`}>\n                                    {\n                                        row.map((col, j) => {\n                                            return (\n                                                <td key={`td.r${i}.c${j}`}>{col}</td>\n                                            )\n                                        })\n                                    }\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default RenderTable;","import React from 'react';\nimport RenderTable from './elements/RenderTable';\nimport Loader from './elements/Loader';\nimport { API_URL, CUBE_JS_TOKEN } from '../config';\n\nconst LoadData = async (categoryType, semester = '', className = '', section = '', cb) => {\n    let filters = [\n        {\n            \"dimension\": \"Users.categorytype\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${categoryType}`\n            ]\n        }\n    ];\n    let dimensions = [\n        \"Users.profileFullname\",\n        \"Users.profileRollnumber\",\n        \"Grades.grade\",\n        \"Sections.section\",\n        \"Semesters.semester\"\n    ]\n\n    if (semester) {\n        filters.push({\n            \"dimension\": \"Semesters.semester\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${semester}`\n            ]\n        });\n    }\n\n    if (className) {\n        filters.push({\n            \"dimension\": \"Grades.grade\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${className}`\n            ]\n        });\n    }\n\n    if (section) {\n        filters.push({\n            \"dimension\": \"Sections.section\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${section}`\n            ]\n        })\n    }\n    let query = {\n        \"dimensions\": dimensions,\n        \"timeDimensions\": [\n            {\n                \"dimension\": \"Attendances.createdat\"\n            }\n        ],\n        \"order\": {\n            \"Attendances.attendance\": \"desc\"\n        },\n        \"measures\": [\n            \"Attendances.attendance\"\n        ],\n        \"filters\": filters\n    };\n\n    try {\n        let res = await fetch(API_URL + \"/cubejs-api/v1/load\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: CUBE_JS_TOKEN\n            },\n            body: JSON.stringify({ query })\n        })\n        res = await res.json();\n\n        cb(res.data);\n    }\n    catch (err) {\n        console.log('Fetch error: ', err.message);\n        cb([]);\n    }\n}\n\nconst FormatAsTable = (data, categoryType) => {\n    const headers = [\n        'Name',\n        'Class',\n        'Attendance',\n        'Section',\n        'Semester'\n    ];\n\n    if (categoryType === 'S')\n        headers.unshift('Roll num');\n\n    if (!data)\n        return { headers, rows: [] };\n\n    data = data.filter(item => {\n        return item['Attendances.attendance'] ? true : false\n    })\n\n    const rows = data.map(item => {\n        let columns = [\n            item['Users.profileFullname'],\n            item['Grades.grade'],\n            item['Attendances.attendance'].toFixed(2),\n            item['Sections.section'],\n            item['Semesters.semester']\n        ];\n        if (categoryType === 'S')\n            columns.unshift(item['Users.profileRollnumber']);\n\n        return (columns);\n    })\n\n    return {\n        headers, rows\n    };\n}\n\nclass TopAttendees extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            categoryType: props.categoryType,\n            table: {\n                rows: [],\n                headers: []\n            },\n            loading: true\n        };\n\n        this.showModal = props.showModal;\n        this.Load(props.semester, props.className, props.section);\n    }\n\n    Load = (semester, className, section) => {\n\n        this.setState({\n            loading: true\n        });\n\n        LoadData(this.state.categoryType, semester, className, section, data => {\n            const { rows, headers } = FormatAsTable(data, this.state.categoryType);\n\n            this.setState({\n                table: {\n                    rows,\n                    headers\n                },\n                loading: false\n            })\n        })\n    }\n\n    componentWillReceiveProps(props) {\n        this.Load(props.semester, props.className);\n    }\n\n    handleClick = () => {\n        let { loading, table } = this.state;\n\n        if (!loading) {\n            this.showModal('Top Attendees',\n                RenderTable,\n                {\n                    table\n                });\n        }\n\n        return true;\n    }\n\n    render() {\n        let { table, loading } = this.state;\n\n        return (\n            <div className=\"card medium\">\n                <div className=\"card-header\">\n                    <div className=\"two-third container-v-center\">\n                        <span className=\"padding\">Top Attendees</span>\n                    </div>\n                    <div className=\"one-third container-v-center right\">\n                        <span onClick={e => this.handleClick()} className=\"open-modal-btn\">Expand</span>\n                    </div>\n                </div>\n\n                <div className=\"card-body scroll-h\" style={{ height: '295px' }}>\n                    {\n                        loading ?\n                            <Loader style={{ height: '255px' }} /> :\n                            <RenderTable table={table} style={{ width: '800px' }} />\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TopAttendees;","import React from 'react';\nimport RenderScoreMeters from './elements/RenderScoreMeters';\nimport Loader from './elements/Loader';\nimport { API_URL, CUBE_JS_TOKEN } from '../config';\n\nconst LoadData = async (categoryType, semester = '', className = '', section = '', cb) => {\n    let filters = [{\n        \"dimension\": \"Users.categorytype\",\n        \"operator\": \"equals\",\n        \"values\": [\n            `${categoryType}`\n        ]\n    }], dimensions = [];\n\n    if (!semester) {\n        dimensions.push('Semesters.semester');\n    }\n    if (semester) {\n        filters.push(\n            {\n                \"dimension\": \"Semesters.semester\",\n                \"operator\": \"equals\",\n                \"values\": [\n                    `${semester}`\n                ]\n            }\n        );\n        if (!className) {\n            dimensions.push('Grades.grade');\n        }\n    }\n    if (className) {\n        filters.push({\n            \"dimension\": \"Grades.grade\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${className}`\n            ]\n        });\n        dimensions.push('Sections.section');\n    }\n\n    const query = {\n        \"measures\": [\n            \"Attendances.attendance\",\n            \"Attendances.count\"\n        ],\n        \"timeDimensions\": [\n            {\n                \"dimension\": \"Attendances.createdat\"\n            }\n        ],\n        \"order\": {\n            \"Attendances.attendance\": \"desc\"\n        },\n        \"dimensions\": dimensions,\n        \"filters\": filters\n    };\n\n    let res = await fetch(API_URL + \"/cubejs-api/v1/load\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: CUBE_JS_TOKEN\n        },\n        body: JSON.stringify({ query })\n    })\n    res = await res.json();\n\n    cb(res.data);\n}\n\nconst FormatData = (data) => {\n    if (!data)\n        return [];\n        \n    data = data.filter(item => {\n        return item['Attendances.attendance'] ? true : false;\n    })\n    return data.map(item => {\n        let attendance = item['Attendances.attendance'];\n        attendance = parseFloat(attendance.toFixed(2));\n\n        return {\n            name: item['Semesters.semester'] ||\n                item['Grades.grade'] ||\n                item['Sections.section'],\n            value: parseFloat(attendance.toFixed(2))\n        }\n    })\n}\n\nclass AttendanceDistributions extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            categoryType: props.categoryType,\n            data: [],\n            loading: true\n        };\n\n        this.showModal = props.showModal;\n        this.Load(props.semester, props.className, props.section);\n    }\n\n    Load = (semester, className, section) => {\n        this.setState({\n            loading: true\n        });\n\n        LoadData(this.state.categoryType, semester, className, section, data => {\n            data = FormatData(data);\n\n            this.setState({\n                data,\n                loading: false\n            });\n        })\n    }\n\n    componentWillReceiveProps(props) {\n        this.Load(props.semester, props.className, props.section)\n    }\n\n    handleClick = () => {\n        let { loading, data } = this.state;\n\n        if (!loading) {\n            this.showModal('Attendance Distribution',\n                RenderScoreMeters,\n                {\n                    scores: data,\n                    title: 'Average',\n                    meterWidth: '50%'\n                });\n        }\n\n        return true;\n    }\n\n    render() {\n        let { loading, data } = this.state;\n\n        return (\n            <div className=\"card medium\">\n                <div className=\"card-header\">\n                    <div className=\"two-third container-v-center\">\n                        <span className=\"padding\">Attendance Distribution</span>\n                    </div>\n                    <div className=\"one-third container-v-center right\">\n                        <span onClick={e => this.handleClick()} className=\"open-modal-btn\">Expand</span>\n                    </div>\n                </div>\n\n                <div className=\"card-body\">\n                    {\n                        loading ?\n                            <Loader style={{ height: '255px' }} /> :\n                            <RenderScoreMeters scores={data} title=\"Average\" meterWidth=\"50%\" />\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AttendanceDistributions;","import React from 'react';\nimport { ResponsiveContainer, LineChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Line } from 'recharts';\n\nconst colors = ['#FF6492', '#0095FF', '#141446', '#7A77FF'];\n\nconst RenderLineChart = props => {\n    const { timelineData, categories , customTooltip} = props;\n\n    return (\n        <div className=\"container center padding\">\n            <ResponsiveContainer width=\"100%\" height={250} className=\"bordered\">\n                <LineChart data={timelineData}\n                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"day\" />\n                    <YAxis />\n                    {\n                        customTooltip?\n                            <Tooltip content={customTooltip}/>:\n                            <Tooltip />\n\n                    }\n                    <Legend />\n                    {\n                        categories.map((cat, index) => {\n                            return (\n                                <Line type=\"monotone\" dataKey={cat}\n                                    stroke={colors[index % 4]} key={`lineChart#${index}`} />\n                            )\n                        })\n                    }\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nexport default RenderLineChart;","import React from 'react';\nimport RenderLineChart from './elements/RenderLineChart';\nimport Loader from './elements/Loader';\nimport { API_URL, CUBE_JS_TOKEN } from '../config';\n\nconst LoadData = async (categoryType, semester = '', className = '', section = '', cb) => {\n    let filters = [{\n        \"dimension\": \"Users.categorytype\",\n        \"operator\": \"equals\",\n        \"values\": [\n            `${categoryType}`\n        ]\n    }], dimensions = [];\n\n    if (!semester) {\n        dimensions.push('Semesters.semester');\n    }\n    if (semester) {\n        filters.push(\n            {\n                \"dimension\": \"Semesters.semester\",\n                \"operator\": \"equals\",\n                \"values\": [\n                    `${semester}`\n                ]\n            }\n        );\n        if (!className) {\n            dimensions.push('Grades.grade');\n        }\n    }\n    if (className) {\n        filters.push({\n            \"dimension\": \"Grades.grade\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${className}`\n            ]\n        });\n        dimensions.push('Sections.section');\n    }\n\n    const query = {\n        \"dimensions\": dimensions,\n        \"timeDimensions\": [\n            {\n                \"dimension\": \"Attendances.createdat\",\n                \"granularity\": \"day\"\n            }\n        ],\n        \"order\": {\n            \"Attendances.createdat\": \"asc\"\n        },\n        \"measures\": [\n            \"Attendances.attendance\"\n        ],\n        \"filters\": filters\n    };\n\n    let res = await fetch(API_URL + \"/cubejs-api/v1/load\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: CUBE_JS_TOKEN\n        },\n        body: JSON.stringify({ query })\n    })\n    res = await res.json();\n\n    cb(res.data);\n}\n\nconst FormatData = data => {\n    if (!data)\n        return { timeline: [], categories: [] };\n\n    data = data.filter(item => {\n        return item['Attendances.attendance']? true: false;\n    })\n    data = data.map(item => {\n        return {\n            day: new Date(item['Attendances.createdat.day']).toDateString(),\n            attendance: parseFloat(item['Attendances.attendance'].toFixed(2)),\n            category: item['Semesters.semester'] ||\n                item['Grades.grade'] ||\n                item['Sections.section']\n        }\n    })\n\n    let categories = [], dailyData = {}, indexDates = [];\n    data.forEach(item => {\n        if (!categories.includes(item.category)) {\n            categories.push(item.category);\n        }\n        if (!indexDates.includes(item.day)) {\n            indexDates.push(item.day);\n        }\n\n        if (dailyData[item.day]) {\n            dailyData[item.day][item.category] = item.attendance;\n        }\n        else {\n            dailyData[item.day] = {\n                day: item.day\n            };\n            dailyData[item.day][item.category] = item.attendance;\n        }\n    });\n\n    data = indexDates.map(day => {\n        return dailyData[day];\n    })\n\n    return { timeline: data, categories };\n};\n\nconst CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload) {\n        return (\n            <div className=\"white padding-medium\">\n                <span className=\"padding\">{label}</span>\n                {\n                    payload.map((item, i) => {\n                        return (\n                            <div key={`TTipdiv#${i}`} className=\"padding\">\n                                <label key={`TLabel#${i}`} style={{ color: item.color }} className=\"flex-center full-width\">\n                                    {`${item.name} : ${item.value}%`}\n                                </label>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        );\n    }\n    return null;\n};\n\nclass AttendanceTimeline extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            categoryType: props.categoryType,\n            loading: true,\n            timeline: [],\n            categories: []\n        }\n\n        this.showModal = props.showModal;\n        this.Load(props.semester, props.className, props.section);\n    }\n\n    Load = (semester, className, section) => {\n        this.setState({\n            loading: true,\n        });\n        LoadData(this.state.categoryType, semester, className, section, data => {\n            const { timeline, categories } = FormatData(data);\n\n            this.setState({\n                loading: false,\n                timeline,\n                categories\n            })\n        });\n    }\n\n    componentWillReceiveProps(props) {\n        this.Load(props.semester, props.className, props.section)\n    }\n\n    handleClick = () => {\n        const { loading, timeline, categories } = this.state;\n\n        if (!loading) {\n            this.showModal('Attendance Timeline',\n                RenderLineChart,\n                {\n                    timelineData: timeline,\n                    categories,\n                    customTooltip: CustomTooltip\n                });\n        }\n\n        return true;\n    }\n\n    render() {\n        const { loading, timeline, categories } = this.state;\n\n        return (\n            <div className=\"card medium\">\n                <div className=\"card-header\">\n                    <div className=\"two-third container-v-center\">\n                        <span className=\"padding\">Attendance Timeline</span>\n                    </div>\n                    <div className=\"one-third container-v-center right\">\n                        <span onClick={e => this.handleClick()} className=\"open-modal-btn\">Expand</span>\n                    </div>\n                </div>\n\n                <div className=\"card-body\">\n                    {\n                        loading ?\n                            <Loader style={{ height: '255px' }} /> :\n                            <RenderLineChart timelineData={timeline} categories={categories} customTooltip={CustomTooltip} />\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AttendanceTimeline;","import React from 'react';\nimport RenderPieChart from './elements/RenderPieChart';\nimport Loader from './elements/Loader';\nimport { API_URL, CUBE_JS_TOKEN } from '../config';\n\nconst LoadData = async (semester = '', className = '', section = '', cb) => {\n    let filters = [];\n    let dimensions = [\n        'AssignmentSubmissions.mimetype',\n    ];\n\n    if (semester) {\n        filters.push({\n            \"dimension\": \"Semesters.semester\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${semester}`\n            ]\n        });\n        dimensions.push('Periods.semester')\n    }\n\n    if (className) {\n        filters.push({\n            \"dimension\": \"Grades.grade\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${className}`\n            ]\n        });\n    };\n    if (section) {\n        filters.push({\n            \"dimension\": \"Sections.section\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${section}`\n            ]\n        })\n    }\n\n    const query = {\n        \"dimensions\": dimensions,\n        \"timeDimensions\": [\n            {\n                \"dimension\": \"AssignmentSubmissions.recordAssignmentUploaddate\",\n                \"granularity\": \"day\"\n            }\n        ],\n        \"order\": {\n            \"AssignmentSubmissions.count\": \"desc\",\n            \"AssignmentSubmissions.recordAssignmentUploaddate\": \"asc\"\n        },\n        \"measures\": [\n            \"AssignmentSubmissions.count\"\n        ],\n        \"filters\": filters\n    };\n\n    let res = await fetch(API_URL + \"/cubejs-api/v1/load\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: CUBE_JS_TOKEN\n        },\n        body: JSON.stringify({ query })\n    })\n    res = await res.json();\n\n    cb(res.data);\n}\n\nconst GetGenericFileType = (mime) => {\n    if (!mime)\n        return 'Unknown';\n\n    if (mime.indexOf('image') !== -1)\n        return 'Image';\n    if (mime === 'application/pdf')\n        return 'Pdf';\n    if (mime === 'text/plain')\n        return 'Text';\n    if (mime.indexOf('text') !== -1) {\n        let type = mime.slice(5);\n\n        type = type[0].toUpperCase() + type.slice(1);\n        return type;\n    }\n    if (mime.indexOf('doc') !== -1)\n        return 'Doc';\n    if (mime.indexOf('xls') !== -1)\n        return 'Sheet';\n    if (mime.indexOf('ppt') !== -1)\n        return 'Presentation';\n    if (mime.indexOf('form-data') !== -1)\n        return 'Form data';\n    if (mime.indexOf('json') !== -1)\n        return 'JSON';\n\n    return 'Unknown';\n}\n\nconst FormatData = (data) => {\n    if (!data)\n        return [];\n    let cleanedData = {};\n\n    // keep item only if value is NON Zero\n    data = data.filter(item => item['AssignmentSubmissions.count'] !== 0);\n\n    data.forEach(item => {\n        let name = GetGenericFileType(item['AssignmentSubmissions.mimetype']);\n        let value = item['AssignmentSubmissions.count'];\n\n        if (cleanedData[name]) {\n            cleanedData[name].value += value;\n        }\n        else {\n            cleanedData[name] = {\n                name,\n                value\n            }\n        }\n    });\n\n    return Object.keys(cleanedData).map(key => cleanedData[key]);\n}\n\nclass AssignmentSubmissionStatistics extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            submissionStats: [],\n        };\n\n        this.Load(props.semester, props.className, props.section);\n    }\n\n    Load = (semester, className, section) => {\n        this.setState({\n            loading: true,\n        });\n        LoadData(semester, className, section, data => {\n            data = FormatData(data);\n\n            this.setState({\n                loading: false,\n                submissionStats: data\n            })\n        })\n    }\n\n    componentWillReceiveProps(props) {\n        this.Load(props.semester, props.className, props.section);\n    }\n\n    render() {\n        const { loading, submissionStats } = this.state;\n\n        return (\n            <div>\n                {\n                    loading ? <Loader style={{ height: '260px' }} /> : <RenderPieChart data={submissionStats} />\n                }\n            </div>\n        )\n    }\n}\n\nexport default AssignmentSubmissionStatistics;","import React from 'react';\nimport RenderLineChart from './elements/RenderLineChart';\nimport Loader from './elements/Loader';\nimport {API_URL, CUBE_JS_TOKEN } from '../config';\n\nconst LoadData = async (semester = '', className = '', section = '', cb) => {\n    let filters = [], dimensions = ['Periods.semester'];\n\n    if (!semester) {\n        dimensions.push('Semesters.semester');\n    }\n    if (semester) {\n        filters.push({\n            \"dimension\": \"Semesters.semester\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${semester}`\n            ]\n        });\n        if (!className) {\n            dimensions.push('Grades.grade');\n        }\n    }\n\n    if (className) {\n        filters.push({\n            \"dimension\": \"Grades.grade\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${className}`\n            ]\n        });\n        if (!section) {\n            dimensions.push('Sections.section');\n        }\n    }\n\n    if (section) {\n        filters.push({\n            \"dimension\": \"Sections.section\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${section}`\n            ]\n        })\n        dimensions.push('Subjects.subject');\n    }\n\n    const query = {\n        \"measures\": [\n            \"AssignmentSubmissions.count\"\n        ],\n        \"timeDimensions\": [\n            {\n                \"dimension\": \"AssignmentSubmissions.recordAssignmentUploaddate\",\n                \"granularity\": \"day\"\n            }\n        ],\n        \"order\": {},\n        \"dimensions\": dimensions,\n        \"filters\": filters\n    };\n\n    let res = await fetch(API_URL + \"/cubejs-api/v1/load\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: CUBE_JS_TOKEN\n        },\n        body: JSON.stringify({ query })\n    })\n    res = await res.json();\n\n    if (!res.data) {\n        cb([]);\n    }\n    else\n        cb(res.data);\n}\n\nconst FormatData = data => {\n    if (!data)\n        return { data: [], categories: [] };\n\n    data = data.filter(item => item['AssignmentSubmissions.recordAssignmentUploaddate'] !== null);\n\n    data = data.map(item => {\n        return ({\n            day: new Date(item['AssignmentSubmissions.recordAssignmentUploaddate']).toDateString(),\n            'Submission Count': item['AssignmentSubmissions.count'],\n            category: item['Semesters.semester'] ||\n                item['Grades.grade'] ||\n                item['Sections.section'] ||\n                item['Subjects.subject']\n        })\n    })\n\n    let categories = [], dailyData = {}, indexDates = [];\n    data.forEach(item => {\n        if (!categories.includes(item.category)) {\n            categories.push(item.category);\n        }\n        if (!indexDates.includes(item.day)) {\n            indexDates.push(item.day);\n        }\n\n        if (dailyData[item.day]) {\n            dailyData[item.day][item.category] = item['Submission Count'];\n        }\n        else {\n            dailyData[item.day] = {\n                day: item.day\n            };\n            dailyData[item.day][item.category] = item['Submission Count'];\n        }\n    });\n\n    data = indexDates.map(day => {\n        return dailyData[day];\n    })\n\n    return { data, categories };\n}\n\nclass AssignmentSubmissionTimeline extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            chart: {\n                timelineData: [],\n                categories: []\n            }\n        };\n\n        this.showModal = props.showModal;\n        this.Load(props.semester, props.className, props.section);\n    }\n\n    Load = (semester, className, section) => {\n        this.setState({\n            loading: true,\n        });\n        LoadData(semester, className, section, data => {\n            const { data: timelineData, categories } = FormatData(data);\n\n            this.setState({\n                loading: false,\n                chart: {\n                    timelineData,\n                    categories\n                }\n            })\n        })\n    }\n\n    componentWillReceiveProps(props) {\n        this.Load(props.semester, props.className, props.section);\n    }\n\n    handleClick = () => {\n        const { loading, chart: { timelineData, categories } } = this.state;\n\n        if (!loading) {\n            this.showModal('Assignment Submissions Timeline', RenderLineChart, { timelineData, categories })\n        }\n\n        return true;\n    }\n\n    render() {\n        let { loading, chart: { timelineData, categories } } = this.state;\n        return (\n            <div className=\"card medium\">\n                <div className=\"card-header\">\n                    <div className=\"two-third container-v-center\">\n                        <span className=\"padding\">Assignment Submission Timeline</span>\n                    </div>\n                    <div className=\"one-third container-v-center right\">\n                        <span onClick={e => this.handleClick()} className=\"open-modal-btn\">Expand</span>\n                    </div>\n                </div>\n\n                <div className=\"card-body\">\n                    {\n                        loading ?\n                            <Loader style={{ height: '255px' }} /> :\n                            <RenderLineChart timelineData={timelineData} categories={categories} />\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AssignmentSubmissionTimeline;","import React from 'react';\nimport RenderTable from './elements/RenderTable';\nimport Loader from './elements/Loader';\nimport { API_URL, CUBE_JS_TOKEN } from '../config';\n\nconst LoadData = async (semester = '', className = '', section = '', cb) => {\n    let filters = [], dimensions= [\n        \"AssignmentSubmissions.assignmentTitle\"\n    ];\n\n    if(semester){\n        filters.push({\n            \"dimension\": \"Semesters.semester\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${semester}`\n            ]\n        })\n        dimensions.push('Periods.semester');\n    }\n\n    if (className) {\n        filters.push({\n            \"dimension\": \"Grades.grade\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${className}`\n            ]\n        });\n    }\n\n    if(section){\n        filters.push({\n            \"dimension\": \"Sections.section\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${section}`\n            ]\n        })\n    }\n\n    const query = {\n        \"measures\": [\n            \"AssignmentSubmissions.count\"\n        ],\n        \"timeDimensions\": [\n            {\n                \"dimension\": \"AssignmentSubmissions.recordAssignmentUploaddate\",\n                \"granularity\": \"day\"\n            }\n        ],\n        \"order\": {\n            \"AssignmentSubmissions.recordAssignmentUploaddate\": \"desc\"\n        },\n        \"dimensions\": dimensions,\n        \"filters\": filters\n    };\n\n    let res = await fetch(API_URL + \"/cubejs-api/v1/load\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: CUBE_JS_TOKEN\n        },\n        body: JSON.stringify({ query })\n    })\n    res = await res.json();\n\n    cb(res.data);\n}\n\nconst FormatDataAsTable = data => {\n    const headers = [\n        'Assignment Title',\n        'Date',\n        'Submission Count'\n    ];\n\n    if(!data){\n        return {rows: [], headers}\n    }\n\n    const rows = data.map(item => {\n        return ([\n            item['AssignmentSubmissions.assignmentTitle'] || 'Untitled Assignment',\n            new Date(item['AssignmentSubmissions.recordAssignmentUploaddate.day']).toDateString(),\n            item['AssignmentSubmissions.count'],\n        ])\n    })\n\n    return { rows, headers };\n}\n\nclass AssignmentSubmissionCountByTitle extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            table: {\n                rows: [],\n                headers: []\n            }\n        };\n\n        this.showModal = props.showModal;\n\n        this.Load(props.semester, props.className, props.section);\n    }\n\n    Load = (semester, className, section) => {\n        this.setState({\n            loading: true,\n        });\n        LoadData(semester, className, section, data => {\n            const { rows, headers } = FormatDataAsTable(data);\n\n            this.setState({\n                loading: false,\n                table: {\n                    rows,\n                    headers\n                }\n            })\n        })\n    }\n\n    componentWillReceiveProps(props) {\n        this.Load(props.semester, props.className, props.section);\n    }\n\n    handleClick = () => {\n        const { loading, table } = this.state;\n\n        if (!loading) {\n            this.showModal('Assignment Submissions', RenderTable, { table })\n        }\n\n        return true;\n    }\n\n    render() {\n        const { loading, table } = this.state;\n        return (\n            <div className=\"card medium\">\n                <div className=\"card-header\">\n                    <div className=\"two-third container-v-center\">\n                        <span className=\"padding\">Assignment Submissions</span>\n                    </div>\n\n                    <div className=\"one-third container-v-center right\">\n                        <span onClick={e => this.handleClick()} className=\"open-modal-btn\">Expand</span>\n                    </div>\n                </div>\n\n                <div className=\"card-body\">\n                    {\n                        loading ?\n                            <Loader style={{ height: '260px' }} /> :\n                            <RenderTable table={table} />\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AssignmentSubmissionCountByTitle;","import React from 'react';\n\nconst RenderModal = ({ modalTitle, ModalComponent, modalProps, HideModal }) => {\n    return (\n        <div className=\"modal padding full-width\" style={{ height: '100vh', overflow: 'scroll' }}>\n            <div className=\"card full-width \">\n                <div className=\"card-header\">\n                    <div className=\"two-third container-v-center\">\n                        <span className=\"padding\">{modalTitle}</span>\n                    </div>\n                    <div className=\"one-third container-v-center right\">\n                        <span onClick={e => HideModal()} className=\"close-modal-btn\">Collapse</span>\n                    </div>\n                </div>\n\n                <div className=\"card-body\">\n                    <ModalComponent {...modalProps} />\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default RenderModal;","import React from 'react';\nimport ControllerInfo from '../components/ControllerInfo';\nimport BasicStats from '../components/BasicStats';\nimport Subjects from '../components/Subjects';\nimport UserDistribution from '../components/UserDistribution';\nimport SemesterGradeDistribution from '../components/SemesterGradeDistribution';\nimport TopStudents from '../components/TopStudents';\nimport AttendanceDistributions from '../components/AttendanceDistributions';\nimport AttendanceTimeline from '../components/AttendanceTimeline';\nimport SubmissionTypes from '../components/SubmissionTypes';\nimport SubmissionTimeline from '../components/SubmissionTimeline';\nimport AssignmentByTitle from '../components/AssignmentByTitle';\nimport RenderModal from '../components/elements/Modal';\n\nclass StudentView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            semesterSelected: '',\n            classSelected: '',\n            sectionSelected: '',\n            showModal: false,\n            modalProps: [],\n            modalComponent: BasicStats,\n            modalTitle: ''\n        }\n    }\n\n    setStateKey = (key) => (value) => {\n        let data = {};\n        if (key === 'semesterSelected')\n            data = {\n                classSelected: '',\n                sectionSelected: '',\n                semesterSelected: value\n            };\n        else if (key === 'classSelected')\n            data = {\n                sectionSelected: '',\n                classSelected: value\n            };\n        else\n            data = {\n                sectionSelected: value\n            };\n\n        this.setState(data);\n    }\n\n    showModal = (modalTitle, modalComponent, modalProps) => {\n        this.setState({\n            modalProps,\n            showModal: true,\n            modalComponent,\n            modalTitle: modalTitle || 'Info'\n        });\n    }\n\n    hideModal = () => {\n        this.setState({\n            modalProps: [],\n            showModal: false,\n            modalTitle: ''\n        });\n    }\n\n    render() {\n        const { semesterSelected, classSelected, sectionSelected,\n            showModal, modalComponent, modalProps, modalTitle\n        } = this.state;\n\n        return (\n            <div className=\"app\">\n                <div className=\"one-third container\">\n                    <div className=\"one-half xs\">\n                        <ControllerInfo\n                            setSemester={this.setStateKey('semesterSelected')}\n                            setClass={this.setStateKey('classSelected')}\n                            setSection={this.setStateKey('sectionSelected')} />\n                    </div>\n                    <div className=\"one-half xs\">\n                        <BasicStats categoryType=\"S\" semester={semesterSelected}\n                            className={classSelected} section={sectionSelected} />\n                    </div>\n                </div>\n\n                <div className=\"one-third padding\">\n                    <Subjects semester={semesterSelected} showModal={this.showModal} />\n                </div>\n\n\n                <div className=\"one-third padding\">\n                    <div className=\"card medium\">\n                        <div className=\"card-header\">\n                            <div className=\"three-fourth container-v-center\">\n                                <span className=\"padding\">Students Distribution</span>\n                            </div>\n                        </div>\n\n                        <div className=\"card-body\">\n                            <UserDistribution categoryType=\"S\" semester={semesterSelected}\n                                className={classSelected} />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"one-third padding\">\n                    <div className=\"card medium\">\n                        <div className=\"card-header\">\n                            <div className=\"three-fourth container-v-center\">\n                                <span className=\"padding\">Semester Grade Distributions</span>\n                            </div>\n                        </div>\n\n                        <div className=\"card-body\">\n                            <SemesterGradeDistribution semester={semesterSelected} />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"one-third padding\">\n                    <TopStudents semester={semesterSelected}\n                        className={classSelected} section={sectionSelected}\n                        showModal={this.showModal} categoryType=\"S\" />\n                </div>\n\n                <div className=\"one-third padding\">\n                    <AttendanceDistributions semester={semesterSelected}\n                        className={classSelected} section={sectionSelected}\n                        showModal={this.showModal} categoryType=\"S\" />\n                </div>\n\n                <div className=\"two-third padding\">\n                    <AttendanceTimeline semester={semesterSelected}\n                        className={classSelected} section={sectionSelected}\n                        showModal={this.showModal} categoryType=\"S\" />\n                </div>\n\n                <div className=\"one-third padding\">\n                    <div className=\"card medium\">\n                        <div className=\"card-header\">\n                            <div className=\"two-third container-v-center\">\n                                <span className=\"padding\">Assignment Submission Types</span>\n                            </div>\n                        </div>\n\n                        <div className=\"card-body\">\n                            <SubmissionTypes semester={semesterSelected}\n                                className={classSelected}\n                                section={sectionSelected} />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"one-half padding\">\n                    <SubmissionTimeline semester={semesterSelected}\n                        className={classSelected} section={sectionSelected}\n                        showModal={this.showModal} />\n                </div>\n\n                <div className=\"one-half padding\">\n                    <AssignmentByTitle semester={semesterSelected} className={classSelected}\n                        section={sectionSelected} showModal={this.showModal} />\n                </div>\n\n                {\n                    showModal ?\n                        <RenderModal\n                            ModalComponent={modalComponent}\n                            modalProps={modalProps}\n                            HideModal={this.hideModal}\n                            modalTitle={modalTitle}\n                        /> :\n                        ''\n                }\n            </div>\n        )\n    }\n}\n\nexport default StudentView;","import React from 'react';\nimport RenderBarChart from './elements/RenderBarChart';\nimport Loader from './elements/Loader';\nimport { API_URL, CUBE_JS_TOKEN } from '../config';\n\nconst LoadData = async (semester = '', cb) => {\n    let filters = [];\n    if (semester) {\n        filters.push({\n            \"dimension\": \"Semesters.semester\",\n            \"operator\": \"equals\",\n            \"values\": [\n                `${semester}`\n            ]\n        });\n    }\n    const query = {\n        \"measures\": [\n            \"UsersGrade.average\"\n        ],\n        \"timeDimensions\": [],\n        \"order\": {\n            \"UsersGrade.average\": \"desc\"\n        },\n        \"filters\": filters,\n        \"dimensions\": [\n            \"UsersGrade.gradeTeachername\"\n        ]\n    };\n\n    let res = await fetch(API_URL + \"/cubejs-api/v1/load\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: CUBE_JS_TOKEN\n        },\n        body: JSON.stringify({ query })\n    })\n    res = await res.json();\n\n    cb(res.data);\n}\n\nconst FormatData = data => {\n    if(!data)\n        return [];\n        \n    return data.map(item => {\n        return {\n            name: item['UsersGrade.gradeTeachername'],\n            value: item['UsersGrade.average']\n        }\n    })\n}\n\nclass GradesByTeacher extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            data: []\n        };\n\n        this.showModal = props.showModal;\n        this.Load(props.semester);\n    }\n\n    Load = (semester) => {\n        this.setState({\n            loading: true\n        })\n        LoadData(semester, data => {\n            data = FormatData(data);\n\n            this.setState({\n                loading: false,\n                data\n            })\n        })\n    }\n\n    componentWillReceiveProps(props) {\n        this.Load(props.semester);\n    }\n\n    handleClick = () => {\n        const { loading, data } = this.state;\n\n        if (!loading) {\n            this.showModal('Grade marks by Teacher',\n                RenderBarChart,\n                {\n                    data,\n                    title: 'Avg Grade by Teacher',\n                });\n        }\n\n        return true;\n    }\n\n    render() {\n        let { loading, data } = this.state;\n\n        return (\n            <div className=\"card medium\">\n                <div className=\"card-header\">\n                    <div className=\"two-third container-v-center\">\n                        <span className=\"padding\">Grade marks by Teacher</span>\n                    </div>\n                    <div className=\"one-third container-v-center right\">\n                        <span onClick={e => this.handleClick()} className=\"open-modal-btn\">Expand</span>\n                    </div>\n                </div>\n\n                <div className=\"card-body\">\n                    {\n                        loading ?\n                            <Loader style={{ height: '255px' }} /> :\n                            <RenderBarChart data={data} title=\"Avg Grade by Teacher\"/>\n                    }\n                </div>\n            </div>\n        )\n\n    }\n}\n\nexport default GradesByTeacher;","import React from 'react';\nimport ControllerInfo from '../components/ControllerInfo';\nimport BasicStats from '../components/BasicStats';\nimport UserDistribution from '../components/UserDistribution';\nimport TopStudents from '../components/TopStudents';\nimport AttendanceTimeline from '../components/AttendanceTimeline';\nimport GradesByTeacher from '../components/GradesByTeacher';\n\nimport RenderModal from '../components/elements/Modal';\n\nclass TeacherView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            semesterSelected: '',\n            classSelected: '',\n            sectionSelected: '',\n            showModal: false,\n            modalProps: [],\n            modalComponent: BasicStats,\n            modalTitle: ''\n        }\n    }\n\n    setStateKey = (key) => (value) => {\n        let data = {};\n        if (key === 'semesterSelected')\n            data = {\n                classSelected: '',\n                sectionSelected: '',\n                semesterSelected: value\n            };\n        else if (key === 'classSelected')\n            data = {\n                sectionSelected: '',\n                classSelected: value\n            };\n        else\n            data = {\n                sectionSelected: value\n            };\n\n        this.setState(data);\n    }\n\n    showModal = (modalTitle, modalComponent, modalProps) => {\n        this.setState({\n            modalProps,\n            showModal: true,\n            modalComponent,\n            modalTitle: modalTitle || 'Info'\n        });\n    }\n\n    hideModal = () => {\n        this.setState({\n            modalProps: [],\n            showModal: false,\n            modalTitle: ''\n        });\n    }\n\n    render() {\n        const { semesterSelected, classSelected, sectionSelected,\n            showModal, modalComponent, modalProps, modalTitle\n        } = this.state;\n\n        return (\n            <div className=\"app\">\n                <div className=\"one-third container\">\n                    <div className=\"one-half xs\">\n                        <ControllerInfo\n                            setSemester={this.setStateKey('semesterSelected')}\n                            setClass={this.setStateKey('classSelected')}\n                            setSection={this.setStateKey('sectionSelected')} />\n                    </div>\n                    <div className=\"one-half xs\">\n                        <BasicStats categoryType=\"T\" semester={semesterSelected}\n                            className={classSelected} section={sectionSelected} />\n                    </div>\n                </div>\n\n                <div className=\"one-third padding\">\n                    <div className=\"card medium\">\n                        <div className=\"card-header\">\n                            <div className=\"three-fourth container-v-center\">\n                                <span className=\"padding\">Teachers Distribution</span>\n                            </div>\n                        </div>\n\n                        <div className=\"card-body\">\n                            <UserDistribution categoryType=\"T\" semester={semesterSelected}\n                                className={classSelected} />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"one-third padding\">\n                    <GradesByTeacher semester={semesterSelected} showModal={this.showModal} />\n                </div>\n\n                <div className=\"one-half padding\">\n                    <TopStudents semester={semesterSelected}\n                        className={classSelected} section={sectionSelected}\n                        showModal={this.showModal} categoryType=\"T\" />\n                </div>\n\n                <div className=\"one-half padding\">\n                    <AttendanceTimeline semester={semesterSelected}\n                        className={classSelected} section={sectionSelected}\n                        showModal={this.showModal} categoryType=\"T\" />\n                </div>\n\n                \n\n                {\n                    showModal ?\n                        <RenderModal\n                            ModalComponent={modalComponent}\n                            modalProps={modalProps}\n                            HideModal={this.hideModal}\n                            modalTitle={modalTitle}\n                        /> :\n                        ''\n                }\n            </div>\n        );\n    }\n}\n\nexport default TeacherView;","import React from 'react';\nimport StudentView from './views/StudentView';\nimport TeacherView from './views/TeacherView';\n\nimport './App.css';\nimport './Loader.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      views: [\n        {\n          title: 'Students / Overall',\n          name: 'STUDENT_VIEW'\n        },\n        {\n          title: 'Teachers',\n          name: 'TEACHER_VIEW'\n        }\n      ],\n      viewSelected: 'STUDENT_VIEW'\n    }\n  }\n\n  viewSelector = (view) => () => {\n    this.setState({\n      viewSelected: view\n    })\n  }\n\n  render() {\n    const { viewSelected, views } = this.state;\n    return (\n      <div>\n        <div className=\"container padding\">\n          <div className=\"tab-selector bottom-bordered\">\n            {\n              views.map((view, index) => {\n                let clickHandler = this.viewSelector(view.name);\n                let active = viewSelected === view.name;\n                let className = active ? 'tab active' : 'tab';\n\n                return (\n                  <div className={className} onClick={clickHandler} key={`tab#${index}`}>\n                    <span key={`tab#${index}.title`}>{view.title}</span>\n                  </div>\n                )\n              })\n            }\n          </div>\n          \n        </div>\n        {\n          viewSelected === 'STUDENT_VIEW' ?\n            <StudentView /> :\n            <TeacherView />\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('trueleap-analytics-app')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}